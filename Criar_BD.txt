-- MySQL Script generated by MySQL Workbench
-- Tue Oct 15 19:40:06 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema estoque
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `estoque` ;

-- -----------------------------------------------------
-- Schema estoque
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `estoque` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `estoque` ;

-- -----------------------------------------------------
-- Table `estoque`.`categorias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estoque`.`categorias` ;

CREATE TABLE IF NOT EXISTS `estoque`.`categorias` (
  `categoriaid` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `descricao` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`categoriaid`),
  UNIQUE INDEX `nome` (`nome` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- Table `estoque`.`produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estoque`.`produtos` (
  `produtoid` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `descricao` TEXT NULL DEFAULT NULL,
  `preco` DECIMAL(10,2) NOT NULL,
  `quantidade` INT NULL DEFAULT '0',
  `categoria_id` INT NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `quantidade_minima` INT NULL DEFAULT NULL,
  PRIMARY KEY (`produtoid`),
  INDEX `categoria_id` (`categoria_id` ASC) VISIBLE,
  CONSTRAINT `produtos_ibfk_1`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `estoque`.`categorias` (`categoriaid`))
ENGINE = InnoDB
AUTO_INCREMENT = 18
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- Table `estoque`.`entradas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estoque`.`entradas` ;

CREATE TABLE IF NOT EXISTS `estoque`.`entradas` (
  `entradaid` INT NOT NULL AUTO_INCREMENT,
  `produto_id` INT NULL DEFAULT NULL,
  `quantidade` INT NOT NULL,
  `data_entrada` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`entradaid`),
  INDEX `produto_id` (`produto_id` ASC) VISIBLE,
  CONSTRAINT `entradas_ibfk_1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `estoque`.`produtos` (`produtoid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `estoque`.`saídas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estoque`.`saídas` ;

CREATE TABLE IF NOT EXISTS `estoque`.`saidas` (
  `saidaid` INT NOT NULL AUTO_INCREMENT,
  `produto_id` INT NULL DEFAULT NULL,
  `quantidade` INT NOT NULL,
  `data_saida` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`saidaid`),
  INDEX `produto_id` (`produto_id` ASC) VISIBLE,
  CONSTRAINT `saídas_ibfk_1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `estoque`.`produtos` (`produtoid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `estoque` ;

-- -----------------------------------------------------
-- procedure adicionar_entrada
-- -----------------------------------------------------

USE `estoque`;
DROP procedure IF EXISTS `estoque`.`adicionar_entrada`;

DELIMITER $$
USE `estoque`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `adicionar_entrada`(
 IN p_produto_id INT,
 IN p_quantidade INT
)
BEGIN
 INSERT INTO entradas (produto_id, quantidade) VALUES (p_produto_id,
p_quantidade);
 UPDATE produtos SET quantidade = quantidade + p_quantidade WHERE id =
p_produto_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure adicionar_saida
-- -----------------------------------------------------

USE `estoque`;
DROP procedure IF EXISTS `estoque`.`adicionar_saida`;

DELIMITER $$
USE `estoque`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `adicionar_saida`(
 IN p_produto_id INT,
 IN p_quantidade INT
)
BEGIN
 IF (SELECT quantidade FROM produtos WHERE id = p_produto_id) >= p_quantidade
THEN
 INSERT INTO saidas (produto_id, quantidade) VALUES (p_produto_id,
p_quantidade);
 UPDATE produtos SET quantidade = quantidade - p_quantidade WHERE id =
p_produto_id;
 ELSE
 SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Quantidade insuficiente em
estoque';
 END IF;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


CREATE USER IF NOT EXISTS 'usuario'@'192.168.1.%';
GRANT ALL PRIVILEGES ON estoque.* TO 'usuario'@'192.168.1.%';